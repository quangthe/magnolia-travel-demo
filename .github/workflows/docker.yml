name: Magnolia webapp

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      note:
        description: 'Notes'
        required: false
        default: 'Manual trigger'

env:
  REGISTRY: docker.io
  IMAGE: pcloud/magnolia-travel-demo
  MAVEN_USER: ${{ secrets.MAVEN_USER }}
  MAVEN_USER_PWD: ${{ secrets.MAVEN_USER_PWD }}

jobs:
  build-webapp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'
          cache: maven
      - name: Build with Maven
        run: mvn package -s .m2/settings.xml
      - name: Archive Magnolia bundle
        uses: actions/upload-artifact@v3
        with:
          name: magnolia-travel-demo-webapp.war
          path: magnolia-travel-demo-webapp/target/*.war
          retention-days: 30

  push-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      # to upload sarif files
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download bundle artifact
        uses: actions/download-artifact@v3
        with:
          name: magnolia-bundle
          path: magnolia-travel-demo-webapp/target/
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: base-demo-webapp/target/

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: pcloud
          password: ${{ secrets.DOCKER_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE }}
          flavor: |
            latest=false
            prefix=
            suffix=
          tags: |
            type=pep440,pattern={{version}}
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v2
        with:
          context: ./magnolia-travel-demo-webapp
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.meta.outputs.tags }}
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'